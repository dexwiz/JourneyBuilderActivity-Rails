<div id="step1" class="step">
	Select one: <br>
	<select id="select1">
	    <option value="foo">Foo</option>
	    <option value="bar">Bar</option>
	</select>
</div>
<div id="step2" class="step">
	Another page
</div>


<script>

    var connection = new Postmonger.Session();
	var tokens;
	var endpoints;
	var toJbPayload = {};
	var step = 1;

    $(window).ready(function() {
        connection.trigger('ready');
		//connection.trigger('requestTokens');
		//connection.trigger('requestEndpoints');
    })


	connection.on('initActivity', function(payload) {
		console.log('init activity');
		console.log(payload);
		if (payload) {
            toJbPayload = payload;
        }     
		gotoStep(1);
    });
    
    connection.on('initConfig', function(payload) {
    	//not ran
		console.log('init config');
		console.log(payload);
		if (payload) {
            toJbPayload = payload;
        }     
		gotoStep(1);
    });
   
	connection.on('requestedTokens', function( data ) {
		if( data.error ) {
			console.error( data.error );
		} else {
			tokens = data;
		}
	});
	
	connection.on('requestedEndpoints', function( data ) {
		if( data.error ) {
			console.error( data.error );
		} else {
			endpoints = data;
		}
	});

    connection.on('populateFields', function(payload) {
    });
    
        connection.on('clickedNext', function() {
        step++;
        gotoStep(step);
        connection.trigger('ready');
    });

    connection.on('clickedBack', function() {
        step--;
        gotoStep(step);
        connection.trigger('ready');
    });
    
    function gotoStep(step) {
        $('.step').hide();
        switch(step) {
            case 1:
                $('#step1').show();
                connection.trigger('updateButton', { button: 'back', visible: false});
				connection.trigger('updateButton', { button: 'next', text: 'next'});
                break;
            case 2:
                $('#step2').show();
                connection.trigger('updateButton', { button: 'back', visible: true});
				connection.trigger('updateButton', { button: 'next', text: 'done', visible: true});
                break;
            case 3: // Only 2 steps, so the equivalent of 'done' - send off the payload
                save();
                break;
        }
    }
    
    
    function save() {
		//var value = $("#select1").val();
		//toJbPayload['arguments'].execute.inArguments.baz = value;
		toJbPayload['metaData'].isConfigured  = true;
		console.log(toJbPayload);
        connection.trigger('updateActivity', toJbPayload);
    }

</script>

<!--
Postmonger Broadcasts these events

initConfig
requestedTokens
requestedEndpoints
clickedNext
clickedBack
Postmonger Listens for these events

ready
requestTokens
requestEndpoints
updateButton
updateTrigger
-->

